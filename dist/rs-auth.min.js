var app=angular.module("rs-auth",[]);app.constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}),app.service("$rsSession",["$window",function(t){this.set=function(e,n){t.sessionStorage.setItem(e,n)},this.get=function(e){return t.sessionStorage.getItem(e)},this.setUser=function(e){t.sessionStorage.setItem("user",JSON.stringify(e))},this.getUser=function(){return JSON.parse(t.sessionStorage.getItem("user"))},this.unset=function(e){t.sessionStorage.removeItem(e)},this.setLocalAuth=function(e){t.localStorage.setItem("authToken",e)},this.getLocalAuth=function(){return t.localStorage.getItem("authToken")},this.clear=function(){t.sessionStorage.clear(),t.localStorage.clear()}}]),app.provider("$rsAuth",function(){var t={authUrl:"",loginEndPoint:"/auth",registerEndPoint:"/register",validateEndPoint:"/auth",logoutEndPoint:"/logout"},e={all:"*",member:"user-member",visitor:"user-visitor"};this.setConfig=function(e){e.authUrl&&(t.authUrl=e.authUrl),e.loginEndPoint&&(t.loginEndPoint=e.loginEndPoint),e.logoutEndPoint&&(t.logoutEndPoint=e.logoutEndPoint),e.validateEndPoint&&(t.validateEndPoint=e.validateEndPoint),e.registerEndPoint&&(t.registerEndPoint=e.registerEndPoint)},this.setUserRoles=function(t){e=t},this.$get=function(n,o){return{login:function(e){return n({url:t.authUrl+t.loginEndPoint,method:"POST",data:e}).then(function(t){return e.remember&&o.setLocalAuth(t.data.token),o.set("authToken",t.data.token),o.set("userRole",t.data.user.status),o.setUser(t.data.user),t})},logout:function(){return n({url:t.authUrl+t.logoutEndPoint,method:"GET",headers:{"X-Auth-Token":o.get("authToken")}}).then(function(){o.clear()})},register:function(e){return n({url:t.authUrl+t.registerEndPoint,method:"POST",data:e}).then(function(t){return o.set("authToken",t.data.token),o.set("userRole","user"),o.setUser(t.data.user),t})},validateToken:function(e){return n({url:t.authUrl+t.validateEndPoint,method:"GET",headers:{"X-Auth-Token":e}}).then(function(t){return o.set("authToken",e),o.set("userRole","user"),o.setUser(t.data),t})},isAuthenticated:function(){return!!o.get("authToken")},isAuthorized:function(t){return angular.isArray(t)||(t=[t]),this.isAuthenticated()&&-1!==t.indexOf(o.get("userRole"))},getUser:function(){return o.getUser()},userRoles:e}}}),app.run(["$rsSession","AUTH_EVENTS","$timeout","$rootScope","$rsAuth",function(t,e,n,o,i){if(i.isAuthenticated())n(function(){o.$broadcast(e.loginSuccess)});else if(t.getLocalAuth()){var s=t.getLocalAuth();i.validateToken(s).then(function(){o.$broadcast(e.loginSuccess)})}o.$on("$stateChangeStart",function(t,n){var s={all:"*"};n.data.authorizedRoles&&(s=n.data.authorizedRoles),s[0]===i.userRoles.all||i.isAuthorized(s)||(t.preventDefault(),o.$broadcast(i.isAuthenticated()?e.notAuthorized:e.notAuthenticated))})}]);